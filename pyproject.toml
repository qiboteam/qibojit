[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "qibojit"
version = "0.1.4"
description = "Simulation tools based on numba and cupy."
authors = ["The Qibo team"]
license = "Apache License 2.0"
readme = "README.md"
homepage = "https://qibo.science"
repository = "https://github.com/qiboteam/qibojit"
documentation = "https://qibo.science/docs/qibo/stable"
keywords = []
packages = [{ include = "qibojit", from = "src" }]
classifiers = [
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering :: Physics",
]

[tool.poetry.dependencies]
python = "^3.9,<3.13"
numba = ">=0.59.0"
qibo = ">=0.2.8"
scipy = "^1.10.1"
psutil = "^5.9.5"
cupy-cuda12x = { version = "^13.1.0", optional = true }
cuquantum-python-cu12 = { version = "^23.10.0", optional = true }

[tool.poetry.group.dev.dependencies]
ipython = "^7.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.3.1"
pylint = "^3.0.3"
pytest-cov = "^4.1.0"
pytest-env = "^0.8.1"

[tool.poetry.extras]
cupy = ["cupy-cuda12x"]
cuquantum = ["cuquantum-python-cu12"]

[tool.poe.tasks]
test = "pytest"
lint = "pylint src/**/*.py -E"
lint-warnings = "pylint src/**/*.py --exit-zero"

[tool.pylint.master]
output-format = "colorized"

[tool.pylint.reports]
output-format = "colorized"

[tool.coverage.run]
omit = ["src/qibojit/backends/clifford_operations*"]

[tool.pytest.ini_options]
testpaths = ['src/qibojit/tests/']
addopts = ['--cov=qibojit', '--cov-report=xml']
env = ["D:NUMBA_DISABLE_JIT=1"]
